Planetary safari/hunting service

Players can pay for specific planetary hunting tours and receive a code that they pass to the channel bot to initiate the trip. Most trips require several participants as they are more difficult/dangerous. Codes are player specific, not nick specific, so even with a changed nick a player can join the hunt they paid for. A code can be used to enter only one party member to prevent cheating.

Trip details (chosen in that order):
PLANET - defines possible QUARRY, TERRAINs, EVENTS. Impacts DIFFICULTY.
QUARRY - specific animal to be hunted. Has requirements for FIREPOWER, STEALTH, and TRACKING. Impacts DIFFICULTY. Defines encountered TERRAIN.

Secondary details:
DIFFICULTY - based on QUARRY, recommended number of party members.
TERRAIN - depending on both PLANET and QUARRY.
QUARRY_CHANCE - based on QUARRY and PLANET, chance for a quarry encounter at every step.

Specific EVENTS (those can give items that impact the trip and party variables, may even be required; when a party event is failed a random player is tested for injury; when a personal difficulty event is failed every failing player is tested for injury):
PLANETARY - based on the specific planet, have flavour for the specific world.
TERRAIN - difficulties presented by the TERRAIN type, generic. Can be RESILIENCE or PEACEFUL.
QUARRY - initial events with the QUARRY chosen. Success decreases DISTANCE, failure decreases/increases it based on the QUARRY's AGGRESSIVENESS. When DISTANCE is lower than the party's TRACKING this turns into the final confrontation.
OTHER - encounters with other possible quarries that match the current PLANET and TERRAIN.

PLAYER properties (used to succeed/survive in EVENTS; individual min/max scores are 1 to 10; races can have different bonuses):
FIREPOWER - for direct confrontation EVENTS and taking down heavy prey. Party sum. Modifier 3.
STEALTH - to avoid danger or close the distance to the QUARRY. Party min. Modifier 2.
TRACKING - impacts chance to find the QUARRY, lowering its DISTANCE property with every successful QUARRY event. Party max. HARD TO MAX OUT! Modifier 2.
SUPPLIES - allows a certain amount of events to happen before the expedition has to go back. Party sum.
RESILIENCE - determines the chance for a player to be injured so much that they cannot continue, ending the trip. Personal. Modifier 2.
EXPERIENCE - The number of different creatures the character has successfuly hunted. Allows an effective increase in skill for all skill checks as follows:
    - +1 with chance = experience
    - +1 more with chance = experience - 10
    - +1 more with chance = experience - 20
    - and so on.

PLANET properties:
QUARRY_CHANCE - chance to find this particular QUARRY on this particular PLANET. 0 to 1.
PLANET_DIFFICULTY - recommended party size for PLANETARY and TERRAIN events.
TERRAINS - An ordered list of terrains that can be found on the planet. In organized groups the QUARRY inhabits a specific type of TERRAIN and the TERRAIN events are limited to those of the creature + those adjacent to them in the list (with a lower probability).

QUARRY properties:
QUARRY_FREQ - initially: how common is the creature. Determines chance of QUARRY events. 1 to 100. Increases with successful TRACKING checks. When it becomes 100 the next event is the final confrontation.
AGGRESSIVENESS - defines how much a failed initial encounter increases/decreases the DISTANCE to the QUARRY. Aggressive creatures might hunt the party themselves.
QUARRY_DIFFICULTY - determines the recommended party size for QUARRY and OTHER events based on what is encountered.

PLAYER equipment slots:
WEAPON - mainly determines FIREPOWER, may lower other properties.
SUIT - basic attire fit for a specific purpose. Impacts all player properties.
TOOL - additional item impacting all player properties.

EQUATIONS:
DIFFICULTY = QUARRY_DIFFICULTY | PLANET_DIFFICULTY
QUARRY_CHANCE = (PLANET_FREQ * QUARRY_FREQ)/100%
EVENT_SUCCESS = EXP(-1*event_diff*EXP(-1*.5^modifier*ability))
QUARRY_FREQ_CHANGE_AT_SUCCESS = -1*player_tracking
QUARRY_FREQ_CHANGE_AT_FAILURE = 10-AGGRESSIVENESS-player_tracking
CHANCE_TO_USE_SUPPLIES_PER_EVENT = number_players * 20%

EVENT selection rules:
1) Organized groups have a fixed chance to meet the QUARRY, starting at QUARRY_CHANCE and increased with every successful encounter.
2) If no QUARRY is encountered or it's a random group the next event is chosen randomly from all applicable of the following:
- The available PLANETARY events.
- The available TERRAIN (RESILIENCE/PEAEFUL) events (matching the QUARRY for organized; all TERRAINs for random).
- If the previous event was TERRAIN (either RESILIENCE or PEAEFUL) - the available OTHER creature events that match that TERRAIN.

Trip workflow:
0) Players register their nick with the bot with the !sign-up command. Only the current nick is registered and is linked to the current track record of the hunter and any experience points accumulated.
1) Players choose their initial equipment after registration. Equipment can be changed at any time when not on a trip (between entering the code and trip ending)
1) Players choose an available trip from the bot with the !planet and !quarry commands. !planet lists all available planets with their difficulty indices if no QUARRY has been selected, or planets that have that QUARRY if it has been selected, !planet planet_name selects a planet. !quarry lists all available creatures with their difficulty if no planet has been selected, and planet specific creatures if it has been, !quarry creature_name selects the creature. !planet clear and !quarry clear reset the choise.
2) Once the player has chosen both a planet and quarry they can use the !status command to see their choice and the cost they have to pay for the trip either as an individual in a random party (size based on the difficulty of the planet) or a complete group (size = QUARRY_DIFF).
3) The player transfers the cost and receives a unique code by DM. They can specify the number of players in their party if group based, with maximum party size = QUARRY_DIFF.
2.1) Individual hunters enter their code and are added to the current random person party for the planet.
2.2) Organized groups enter the same code and are treated separately with a defined QUARRY.
3) The bot relays the starting flavour text to the player immediately after code insertion and notes how many other party members are left to start the trip.
4) When the party reaches the proper size (planetary diff for random groups, preset size for organized groups) the bot starts the trip by selecting the first event.
5) Each player uses the !trip command to receive the event text and choose their action.
6) Each player states their action with one of the available commands:
- !fight & !hide: available in dangerous events.
- !track: available in initial QUARRY events for organized groups and indirect OTHER events for radom groups.
- !survive: available in RESILIENCE challenges.
- !rest: available if the character is injured and the event is not dangerous or RESILIENCE challenge.
- !heal char_name: available if there is an injured member of the party (other than the current player) who has selected !rest as their action (gives a prompt that clarifies that condition if it's not met).
- !forage: available in non-combat PLANETARY and TERRAIN events.
7) The bot makes all player actions visible to other party members.
8) Once all players have chosen an action results are determined and the bot describes each of them (fighting is a group action, all other actions are personal).
9) FIREPOWER, STEALTH, TRACKING, and RESILIENCE checks are made for the encounter, depending on what it requires.
- If a FIREPOWER check fails, a random fighting party member has a RESILIENCE check, and is injured if it fails.
- If any STEALTH checks fail, a random hiding party member has a RESILIENCE check, and is injured if it fails.
- If the group is organized QUARRY_FREQ is modified based on the best TRACKING check result for the whole group.
- If the group is random a successful TRACKING makes the next event a direct OTHER event with the respective creature.
- RESILIENCE checks are made for:
    - surviving RESILIENCE challenges.
    - resting/helping injured characters. The checked value is the max(RESILIENCE) of all resting/helping characters +1 for each additional character with RESILIENCE equal to the max. [max(res_list) + res_list.count(max(res_list))-1]
10) If this was the final confrontation of an organized group and it failed QUARRY_FREQ is lowered to 90 and the trip continues.
11) If this was the final confrontation of an organized group and it succeeded the trip ends. Characters receive an experience point if this is the first time they are on this particular trip (PLANET & QUARRY). Player codes are deactivated.
11) If an already injured player has been injured again they cannot continue or be revived in the field and the trip ends prematurely. Player codes are deactivated and the incapacitated player cannot take part in a hunt for 24 hours.
12) If this was the selected quarry for one or more people in a random group they are noted down to receive an experience point once the group supplies run out.
13) If none of the above is true a check is made to see if the group supplies go down.
14) If group supplies become negative the trip ends. If this happens organized groups fail and do not receive experience, while in a random group everyone that fought in an encounter with their selected QUARRY gets an experience point if this is the first time they are hunting that QUARRY.
12) If supplies are not negative the bot automatically selects the next event. Any !party messages sent are now automatically numbered as belonging to the next event. Players can use the !event command to review the completed event (including the mentioned party messages), or the !continue command to move to the next one (text, messages and actions from the previous event are not shown in !event output anymore).

*) The bot is able to accept the !s(tatus) command at all times to return the current trip length, an estimate of how long remaining supplies will last, and an estimate of the time needed to find the QUARRY. Also lists any current injuries.
*) The bot is able to accept the !p(arty) command at all times to record a party message from the player for action coordination, or list all messages if no text is given. These messages are sent immediately to party members that are in the channel.
*) The bot is able to accept the !t(rip) command at all times during a trip to repeat the last event text plus any party actions sent in their order to the player.